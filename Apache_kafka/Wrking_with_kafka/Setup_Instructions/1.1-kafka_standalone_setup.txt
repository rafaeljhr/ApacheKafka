Running Kakfa with internal zookeeper
-----------------------
#As of now we don't need multiple machines

#As of now to start with 1 node
on node1 (say c1 or whatever is the node name)
--Download kafka tar from archive.apache.org
http://archive.apache.org/dist/kafka/2.2.1/kafka_2.11-2.2.1.tgz

or download newer version
kafka_2.13-2.8.1

$sudo su
$cd /usr/local
$tar -xvf /home/elk/Downloads/kafka_2.11-2.2.1.tgz
$ln -s kafka_2.11-2.2.1 kafka
$chown -R elk:elk kafka*

---update path in .bashrc

$su - elk
$vi .bashrc
export KAFKA_HOME=/usr/local/kafka
export PATH=$PATH:$KAFKA_HOME/bin
$source .bashrc

--two main properties will be used at this point of time but with no changes
/usr/local/kafka/config/server.properties
/usr/local/kafka/config/zookeeper.properties

$note** logged in as elk
# Start the ZooKeeper service
# Note: Soon, ZooKeeper will no longer be required by Apache Kafka.

#if running a zookeeper externally, this step is not required and kafka can connect to external zk, when
# we edit server.properties to point to external zk.
#since we plan to run embedded zookeeper..
$ zookeeper-server-start.sh /usr/local/kafka/config/zookeeper.properties

# Start the Kafka broker service
$ kafka-server-start.sh /usr/local/kafka/config/server.properties

#create a topic to store your events
$kafka-topics.sh --create --topic topic1 --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1
$kafka-topics.sh --describe --topic topic1 --bootstrap-server localhost:9092

--output shows 
Partitions: 0
Leader: 0
Replicas : 0
Isr: 0

Note** broker id is 0

#writing events
Note** remember when using console-producer use 'broker-list' instead 'bootstrap-server'
kafka-console-producer.sh --topic topic1 --broker-list localhost:9092
>1st event
>2nd event
>3rd event
>4th event

#reading events
kafka-console-consumer.sh --topic topic1 --from-beginning --bootstrap-server localhost:9092
kafka-console-consumer.sh --topic topic1 --offset latest --partition 0 --bootstrap-server localhost:9092

$kafka-topics.sh --delete --topic topic1 --bootstrap-server localhost:9092
$kafka-topics.sh --list --bootstrap-server localhost:9092

Now that you reached the end , feel free to tear down the Kafka environmentâ€”or continue playing around.

Stop the producer and consumer clients with Ctrl-C, if you haven't done so already.
Stop the Kafka broker with Ctrl-C.
Lastly, stop the ZooKeeper server with Ctrl-C.
If you also want to delete any data of your local Kafka environment including 
any events you have created along the way, run the command:

$ rm -rf /tmp/kafka-logs /tmp/zookeeper







