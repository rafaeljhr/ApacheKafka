###Building separate docker images of kafka and zookeeper> running 2 different containers>

>kafka-installation7
>kafka-installation7/zk-image
>kafka-installation7/kafka-image

#Build images
docker build . -t kafka-server:2.11
docker build . -t zk-server:3.4

#check if images were built
root@m1:~# docker images
REPOSITORY               TAG          IMAGE ID       CREATED             SIZE
kafka-server             2.11         7dcc33196e52   51 minutes ago      583MB
zk-server                3.4          3d40b42f6a3b   About an hour ago   553MB
kafka                    2.11-2.2.1   77d1a09f757f   44 hours ago        583MB
openjdk                  latest       c9022ce77bf9   4 days ago          467MB
openjdk                  8            f67a59e543c1   5 days ago          514MB
wurstmeister/kafka       latest       c3b059ede60e   7 weeks ago         507MB
hello-world              latest       d1165f221234   4 months ago        13.3kB
wurstmeister/zookeeper   latest       3f43f72cb283   2 years ago         510MB

#check running containers
docker container ls

#Run the containers
docker run -dit --name kafka-server kafka-server:2.11 /bin/sh
docker run -dit --name zk-server zk-server:3.4 /bin/sh

(Options which can be used: sample command)
----
###To start zookeeper in foreground
root@m1:~# cd kafka-installation7/zk-image/
root@m1:~/kafka-installation7/zk-image# docker run --volume=data:/opt/zookeeper-3.4.6/state/zookeeper -p 2181:2181 -p 2888:2888 -p 3888:3888 -p 8080:8080 -it --name zk-server zk-server:3.4 /bin/sh

#error 
docker: Error response from daemon: Conflict. The container name "/zk-server" is already in use by container "763f3b9ca4bce0ac108d483f0a4b43ce55de84314c43e5fe8cb67c336c6b7316". You have to remove (or rename) that container to be able to reuse that name.
See 'docker run --help'.

root@m1:~/kafka-installation7/zk-image# docker rm /zk-server
/zk-server

root@m1:~/kafka-installation7/zk-image# docker run --volume=data:/opt/zookeeper-3.4.6/state/zookeeper -p 2181:2181 -p 2888:2888 -p 3888:3888 -p 8080:8080 -it --name zk-server zk-server:3.4 /bin/sh 
# 

###To start kafka broker in foreground
root@m1:~/kafka-installation7/kafka-image# docker rm kafka-server
kafka-server
root@m1:~/kafka-installation7/kafka-image# docker run -it --name kafka-server kafka-server:2.11 /bin/sh
-----

###to check if containers are up and running
root@m1:~# docker container ls
CONTAINER ID   IMAGE               COMMAND     CREATED             STATUS             PORTS     NAMES
c93422f9f29a   kafka-server:2.11   "/bin/sh"   51 minutes ago      Up 51 minutes                kafka-server
614bd0d5495a   zk-server:3.4       "/bin/sh"   About an hour ago   Up About an hour             zk-server


###To check containers connected to same network

Usage:  docker network inspect [OPTIONS] NETWORK [NETWORK...]
root@m1:~# docker network inspect bridge
[
    {
        "Name": "bridge",
        "Id": "efa9f31640c947c92faebcc4f2ed3e4c09625b5e7ff256cac0d38bbbc2ed31eb",
        "Created": "2021-07-27T14:20:23.616487804+02:00",
        "Scope": "local",
        "Driver": "bridge",
        "EnableIPv6": false,
        "IPAM": {
            "Driver": "default",
            "Options": null,
            "Config": [
                {
                    "Subnet": "172.17.0.0/16",
                    "Gateway": "172.17.0.1"
                }
            ]
        },
        "Internal": false,
        "Attachable": false,
        "Ingress": false,
        "ConfigFrom": {
            "Network": ""
        },
        "ConfigOnly": false,
        "Containers": {
            "614bd0d5495a8bb96c94930d7f066ababa8abfc1cb74e4770f9521f72f4573f8": {
                "Name": "zk-server",
                "EndpointID": "1e8c83fef330ee7134e35c0b7f2e66cf8484a8e4fe09e2aee9c75c6b02c88277",
                "MacAddress": "02:42:ac:11:00:02",
                "IPv4Address": "172.17.0.2/16",
                "IPv6Address": ""
            },
            "c93422f9f29a4456ab9a603cc2c7a51c13b918a1b8e21df1d167a2bf93421d03": {
                "Name": "kafka-server",
                "EndpointID": "4578023a5e912ab54f92149df5888d09fa2989e176f9dd415de931372a2ea5f1",
                "MacAddress": "02:42:ac:11:00:03",
                "IPv4Address": "172.17.0.3/16",
                "IPv6Address": ""
            }
        },
        "Options": {
            "com.docker.network.bridge.default_bridge": "true",
            "com.docker.network.bridge.enable_icc": "true",
            "com.docker.network.bridge.enable_ip_masquerade": "true",
            "com.docker.network.bridge.host_binding_ipv4": "0.0.0.0",
            "com.docker.network.bridge.name": "docker0",
            "com.docker.network.driver.mtu": "1500"
        },
        "Labels": {}
    }
]

(Options which can be used to create network and connect containers to our created network)
-------
#create network which will be used by containers to connect to each other
$docker network create temp_kafka

#start containers attached to created network
$docker run -dit --network=temp_kafka --rm --detach --volume=data:/opt/zookeeper-3.4.6/state/zookeeper --name zk-server -e ZOOKEEPER_CLIENT_PORT=2181 zk-server:3.4

#check if container is attached to the network
$docker inspect network temp_kafka

#if container was not started or not connected to network
#start container and then attach it
$docker run --volume=data:/opt/zookeeper-3.4.6/state/zookeeper -p 2181:2181 -p 2888:2888 -p 3888:3888 -p 8080:8080 -dit --name zk-server zk-server:3.4 /bin/sh
$docker network connect temp_kafka zk-server
$docker inspect network temp_kafka

#similarly start kafka container and attach
$docker run -dit --name kafka-server kafka-server:2.11 /bin/sh
$docker network connect temp_kafka kafka-server
$docker inspect network temp_kafka

------ 
#connect to kafka and zk containers
$docker exec -it kafka-server /bin/sh
$docker exec -it zk-server /bin/sh

#check if kafka as process is already running within your already running kafka container
#check if zk as process is already running within your already running zk container
$jps

#if not, then we need to start kafka & zk (mentioned later)
#the processes should have started as process of container starting, 'Dockerfile'/'start.sh' script needs to be fixed, however
#exit from containers for now

#Additional checks to ensure connectivity between containers
$check if containers can ping each other
docker exec zk-server ping kafka-server -c2
root@m1:~/kafka-installation7# docker exec kafka-server ping zk-server -c2
ping: zk-server: No address associated with hostname

#to check if icc is enabled which allows communication between containers (by default enabled)
root@m1:~/kafka-installation7# docker inspect -f '{{index .Options "com.docker.network.bridge.enable_icc"}}' bridge
true
root@m1:~/kafka-installation7# docker inspect -f '{{index .Options "com.docker.network.bridge.enable_icc"}}' temp_kafka

#Note** Kafka can also be started using
docker run -dit --name kafka-server -p 9092:9092 -e KAFKA_BROKER_ID=1 -e KAFKA_ZOOKEEPER_CONNECT=zk-server:2181 -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://0.0.0.0:9092 -e KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1 kafka-s2:2.11 /bin/sh

#check which networks container are connected to
root@m1:~/kafka-installation7# docker inspect -f '{{range $key, $value := .NetworkSettings.Networks}}{{$key}} {{end}}' zk-server
bridge 
root@m1:~/kafka-installation7# docker inspect -f '{{range $key, $value := .NetworkSettings.Networks}}{{$key}} {{end}}' kafka-server
bridge 
root@m1:~/kafka-installation7# 

#Now, since containers are running but don't have the zookeeper or kafka processes started within them
#connect to zk
$docker exec -it zk-server /bin/sh
    #zookeeper-3.4.6/bin/zkServer.sh start
    #jps
#check if QuorumPeer is running

$docker exec -it kafka-server /bin/sh
    #kafka_2.11-2.2.1/bin/kafka-server-start.sh kafka_2.11-2.2.1/config/server.properties --override zookeeper.connect=172.17.0.2:2181
    #jps

#test working with kafka from another terminal
$docker exec -it kafka-server /bin/sh
     #kafka_2.11-2.2.1/bin/kafka-topics.sh --list --bootstrap-server localhost:9092

$# kafka_2.11-2.2.1/bin/kafka-topics.sh --create --topic test1 --zookeeper 172.17.0.2:2181 --partitions 1 --replication-factor 1
Created topic test1.

$# kafka_2.11-2.2.1/bin/kafka-topics.sh --list --bootstrap-server localhost:9092
test1

#Additional commands which might be helpful
#To stop container
$docker stop zk-server

#to remove the registered name of container
$docker rm zk-server

#to delete an image
$docker rmi zk-server:3.4

