#Create a directory: 
$mkdir zookeeper-ensemble
$cd zookeeper-ensemble

#Get file from web
$wget https://k8s.io/examples/application/zookeeper/zookeeper.yaml
#look into zookeeper.yaml file to understand options used.

OR download from provided location(dropbox/github) & then

$ kubectl apply -f zookeeper-ensemble/zookeeper.yaml  

This creates the zk-hs Headless Service, the zk-cs Service, 
the zk-pdb PodDisruptionBudget, and the zk StatefulSet.
                                                                                          
service/zk-hs unchanged
service/zk-cs unchanged
statefulset.apps/zk configured
error: unable to recognize "zookeeper-ensemble/zookeeper.yaml": 
no matches for kind "PodDisruptionBudget" in version "v1"


#for the above error
we can create an additional file for PodDisruptionBudget
'zookeeper-pod-disruption-budget-minavailable.yaml' under 'zookeeper-ensemble' directory

vi zookeeper-pod-disruption-budget-minavailable.yaml
----
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: zk-pdb
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: zk
----
$kubectl apply -f zookeeper-ensemble/zookeeper-pod-disruption-budget-minavailable.yaml

#kubectl get pods -w -l app=zk
kubectl get pods -w -l app=zk

$ kubectl get pods -w -l app=zk
NAME   READY   STATUS    RESTARTS   AGE
zk-0   1/1     Running   0          19m
zk-1   1/1     Running   0          18m
zk-2   1/1     Running   0          18m

$ kubectl get pods
NAME   READY   STATUS    RESTARTS   AGE
zk-0   1/1     Running   0          19m
zk-1   1/1     Running   0          19m
zk-2   1/1     Running   0          18m

$ kubectl get poddisruptionbudgets
NAME     MIN AVAILABLE   MAX UNAVAILABLE   ALLOWED DISRUPTIONS   AGE
zk-pdb   2               N/A               1                     7m16s

#connect to POD
kubectl exec -it zk-0 -- /bin/bash
ls /usr/bin/z*

zkCli.sh
[zk: localhost:2181(CONNECTED) 0] ls
[zk: localhost:2181(CONNECTED) 1] ls /
[zookeeper]
[zk: localhost:2181(CONNECTED) 2] ls /zookeeper
[quota]
[zk: localhost:2181(CONNECTED) 3] ls /         
[zookeeper]

Similarly we can deploy kafka







