--set AWS CLI on your client node and test access
For example: aws s3 ls
<will show nothing>
Note** If any permission issues
   --simple way: IAM > Users > select your root user > Add permissions > Attach existing policies directly > AdministratorAccess
   --specific way: Add Policies for EKS,CloudFormation,EC2 etc ..

Setup eksctl
----------
##install eksctl

##on mac..
#install homebrew tap
$brew tap  weaveworks/tap
$brew install weaveworks/tap/eksctl

installs dependencies such as 
kubernetes-cli
aws-ima-authenticator
minikube

##on ubuntu
--setup eksctl cli on your client node
--eksctl â€“ A command line tool for working with EKS clusters that automates many individual tasks.
$curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
$sudo mv /tmp/eksctl /usr/local/bin
$eksctl version
$eksctl info

--setup kubectl cli on your client node
--A command line tool for working with Kubernetes clusters.
$curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.17.12/2020-11-02/bin/linux/amd64/kubectl
$mkdir kubectld
$mkdir kubectl/bin
$mv kubectl kubectl/bin/
$chmod -R 777 kubectl/bin/kubectl

--update .bashrc
export KUBECTL_HOME=/home/hdu/kubectld
export PATH=$KUBECTL_HOME/bin

--refresh .bashrc
$source .bashrc
$kubectl version
$kubectl version --short --client
$kubectl version -o json


##creating cluster using defaults
$eksctl create cluster

##creating cluster by providing details
Note** Make sure EKS cluster version is same as kubectl version .

$eksctl create cluster \
> --name test-cluster \
> --version 1.17 \
> --nodegroup-name linux-nodes \
> --node-type t2.micro \
> --nodes 2 \
> --region=eu-central-1

#only if needed
$eksctl delete cluster "test-cluster" --region=eu-central-1

##Checking if cluster is created.
$eksctl get cluster --region=eu-central-1

$aws eks --region eu-central-1 describe-cluster --name test-cluster -query cluster.status
"ACTIVE"

#In order to use kubectl, update kube config
$aws eks --region eu-central-1 update-kubeconfig --name test-cluster

$kubectl get svc

$kubectl get nodes

$kubetctl get ns

$kubectl config view

$kubectl cluster-info

#check the cluster from console

$aws sts get-caller-identity










